1
#include<graphics.h>
#include<stdio.h>
#include<conio.h>
#include<math.h>
void main()
{
int gd=DETECT,gm;
int pivot_x,pivot_y,x,y;
double degree,radian;
int rotated_point_x,rotated_point_y;
initgraph(&gd,&gm,"C://TURBOC3//BGI");
cleardevice();
printf("\t\t***** ROTATION ***** \n");
printf("\n Enter an initial coordinates of the line = ");
scanf("%d %d",&pivot_x,&pivot_y);
printf("\n Enter a final coordinates of the line = ");
scanf("%d %d",&x,&y);
line(pivot_x,pivot_y,x,y);
printf("\n\n Now, Enter a degree = ");
scanf("%lf",&degree);
radian=degree*0.01745;
rotated_point_x=(int)(pivot_x +((x-pivot_x)*cos(radian)-(y-pivot_y)*sin(radian)));
rotated_point_y=(int)(pivot_y +((x-pivot_x)*sin(radian)+(y-pivot_y)*cos(radian)));
setcolor(RED);
line(pivot_x,pivot_y,rotated_point_x,rotated_point_y);
getch();
closegraph();
}


2 #include <stdio.h>
#include <stdlib.h>
#include<graphics.h>
 
void drawline(int x0, int y0, int x1, int y1);
 int main()
{
	
    int x0, y0, x1, y1;
	printf("Enter co-ordinates of first point: ");
	scanf("%d %d",&x0,&y0);
 
	printf("Enter co-ordinates of second point: ");
	scanf("%d %d",&x1,&y1);
	int gdriver=DETECT, gmode; 
	initgraph(&gdriver, &gmode, NULL);
	drawline(x0, y0, x1, y1);
            getch();
	return 0;
}
void drawline(int x0, int y0, int x1, int y1)
{
    int dx, dy, p, x, y;
            dx=x1-x0;
	dy=y1-y0;
 	x=x0;
	y=y0;
 	p=2*dy-dx;
 	while(x<x1)
	{
		if(p>=0)
		{
			putpixel(x,y,7);
			y=y+1;
			p=p+2*dy-2*dx;
		}
		else
		{
			putpixel(x,y,7);
			p=p+2*dy;
		}
		x=x+1;
	}
}

3 #include<stdio.h>
#include<graphics.h>
#include<dos.h>

void boundaryfill(int x,int y,int f_color,int b_color)
{
	if(getpixel(x,y)!=b_color && getpixel(x,y)!=f_color)
	{
		putpixel(x,y,f_color);
		boundaryfill(x+1,y,f_color,b_color);
		boundaryfill(x,y+1,f_color,b_color);
		boundaryfill(x-1,y,f_color,b_color);
		boundaryfill(x,y-1,f_color,b_color);
	}
}


int main()
{
	int gm,gd=DETECT,radius;
	int x,y;
	
	printf("Enter x and y positions for circle\n");
	scanf("%d%d",&x,&y);
	printf("Enter radius of circle\n");
	scanf("%d",&radius);
	
	initgraph(&gd,&gm,NULL);
	circle(x,y,radius);
	boundaryfill(x,y,4,15);
	delay(5000);
	getch();
	closegraph();
	return 0;
}


